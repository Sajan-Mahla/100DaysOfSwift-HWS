it was a challenge day i have to make a ROCK PAPER SCISSOR game so here the code :
//
//  ContentView.swift
//  ChallengeHWS
//
//  Created by SAJAN  on 01/08/25.
//

import SwiftUI

struct ContentView: View {
  let moves = ["ü™®", "üìÑ", "‚úÇÔ∏è"]
    
    
    @State private var appChoice = Int.random(in: 0...2)
    @State private var ShouldWin = Bool.random()
    @State private var score = 0
    @State private var round = 1
    @State private var ShowCasingScore = false
    
    
    
    var body:some View{
        VStack(spacing: 40){
            Text("Round \(round) / 10")
                .font(.largeTitle)
                .bold()
            
            
            VStack{
                Text("App's Move")
                    .font(.title2)
                Text(moves[appChoice])
                    .font(.system(size: 80))
            }
            
            VStack{
                Text("Your Goal")
                    .font(.title2)
                Text(ShouldWin ? "WIN" : "LOSE")
                    .font(.largeTitle)
                    .foregroundColor(ShouldWin ? .green : .red)
            }
            Text("Score: \(score)")
                .font(.title2)
            
            HStack(spacing : 30) {
                ForEach(0..<3){
                    number in Button(action: {
                        PlayerTapped(number)
                    }) {
                        Text(moves[number])
                            .font(.system(size: 50))
                            .padding()
                            .background(Color.blue.opacity(0.2))
                            .clipShape(.capsule)
                        
                    }
                }
            }
            Spacer()
            
            }
        .padding()
        .alert("Game Over", isPresented: $ShowCasingScore){
            Button("Restart", action: resetGame)
        } message: {
            Text("Your final score is \(score)")
        }
        }
    func PlayerTapped(_ PlayerMove: Int) {
        let winningMove = (appChoice + 1) % 3
        let losingMove = (appChoice + 2) % 3
        
        let isCorrect: Bool
        
        if ShouldWin{
            isCorrect = PlayerMove == winningMove
        } else {
            isCorrect = PlayerMove == losingMove
        }
        
        
        if isCorrect {
            score += 1
        } else{
            score -= 1
        }
        
        
        if round == 10{
            ShowCasingScore = true
        } else{
            nextRound()
        }
    }
    
    func nextRound(){
        appChoice = Int.random(in: 0...2)
        ShouldWin.toggle()
        round += 1
    }
    
    func resetGame() {
        score = 0
        round = 1
        appChoice = Int.random(in: 0...2)
        ShouldWin = Bool.random()
    }
    }


#Preview {
    ContentView()
}

